openapi: 3.0.1
info:
  title: NexusDhaam API
  description: |
    OpenAPI 3.0 specification for the NexusDhaam product. Provides endpoints under `/api/v1/orders`.
  version: 1.0.0
servers:
  - url: https://{{environment}}.api.nexusdhaam.com
    description: API server with selectable environment
    variables:
      environment:
        enum:
          - prod
          - test
          - staging
        default: prod
security:
  - bearerAuth: []
  - apiKeyAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    apiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  schemas:
    TestRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 2
          maxLength: 50
        email:
          type: string
          format: email
        age:
          type: integer
          minimum: 18
          maximum: 120
        phone:
          type: string
          pattern: '^+?[1-9]\d{1,14}$'
          description: Use E.164 standard
        website:
          type: string
          format: uri
        language:
          type: string
          enum:
            - en
            - es
            - fr
            - de
            - it
      required:
        - name
        - email
        - age
        - language
    HealthStatus:
      type: object
      properties:
        status:
          type: string
        timestamp:
          type: string
          format: date-time
        database:
          type: string
      required:
        - status
        - timestamp
        - database
    ApiResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          oneOf:
            - $ref: '#/components/schemas/HealthStatus'
            - $ref: '#/components/schemas/ListOrdersResponse'
            - $ref: '#/components/schemas/QuoteResponse'
        meta:
          type: object
          properties:
            timestamp:
              type: string
              format: date-time
            request_id:
              type: string
            total_count:
              type: integer
              description: Total number of items available  
      required:
        - success
        - data
        - meta
    OrderFilters:
      type: object
      properties:
        platform_used:
          type: array
          items:
            type: integer
        delivery_mode:
          type: array
          items:
            type: integer
        order_type:
          type: array
          items:
            type: integer
        store_ids:
          type: array
          items:
            type: integer
        status:
          type: integer
        search_text:
          type: string
    OrderSort:
      type: object
      properties:
        sort_by:
          type: string
        sort_order:
          type: integer
    GetOrdersRequest:
      type: object
      properties:
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        next_iteration_id:
          type: string
        limit:
          type: integer
        filters:
          $ref: '#/components/schemas/OrderFilters'
        sort:
          $ref: '#/components/schemas/OrderSort'
      required:
        - start_time
        - end_time
        - limit
    OrderResp:
      type: object
      properties:
        order_type:
          type: integer
          example: 1
        order_id:
          type: string
          example: "50"
        placed_at:
          type: string
          format: date-time
          example: "2025-06-04T07:20:43.020788+05:30"
        order_status:
          type: integer
          example: 5
        order_status_name:
          type: string
          example: "Order Ready"
        customer_id:
          type: integer
          example: 8
        customer_name:
          type: string
          example: "customer_user2"
        total_amount:
          type: number
          format: float
          example: 78.73
        id:
          type: string
          example: "5a1a664b-a75d-4fae-93e8-42aedde7998c"
        payment_mode:
          type: integer
          example: 2
        payment_mode_name:
          type: string
          example: "Cybersource Payment"
        delivery_address:
          type: string
          example: "Store Pickup Location"
        schedule_time:
          type: string
          format: date-time
          example: "2025-06-04T08:20:43.020788+05:30"
        order_prep_time:
          type: integer
          example: 29
        delivery_time:
          type: integer
          example: 30
        store_id:
          type: integer
          example: 4
        store_name:
          type: string
          example: "store_user2"
        order_source:
          type: integer
          example: 2
        order_source_name:
          type: string
          example: "iOS"
        delivery_mode:
          type: integer
          example: 2
        delivery_mode_name:
          type: string
          example: "Pickup"
    ListOrdersResponse:
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderResp'
        order_count:
          type: object
          additionalProperties:
            type: integer
          example:
            NEW: 6
            PENDING: 6
    ItemPayload:
      type: object
      properties:
        item_id:
          type: integer
          format: int64
        quantity:
          type: integer
        total_amount:
          type: number
          format: float
      required:
        - item_id
        - quantity
        - total_amount
    UtensilsPayload:
      type: object
      properties:
        send_cutlery:
          type: boolean
        carry_bag:
          type: boolean
    QuoteRequest:
      type: object
      properties:
        quotation_id:
          type: string
        customer_id:
          type: integer
          format: int64
        address:
          type: string
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        delivery_mode:
          type: integer
          enum: [0, 1]
          description: "0 = ASAP, 1 = Scheduled"
        order_mode:
          type: integer
          enum: [0, 1]
          description: "0 = Delivery, 1 = Pickup"
        scheduled_for:
          type: string
          format: date-time
        payment_via:
          type: integer
        wallet_money:
          type: number
          format: float
        loyalty_points:
          type: integer
        store_id:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/ItemPayload'
        flat_discount:
          type: number
          format: float
        tips:
          type: number
          format: float
        promo_code:
          type: string
        notes:
          type: string
        utensils:
          $ref: '#/components/schemas/UtensilsPayload'
        expires_at:
          type: string
          format: date-time
      required:
        - customer_id
        - address
        - latitude
        - longitude
        - delivery_mode
        - order_mode
        - payment_via
        - wallet_money
        - loyalty_points
        - store_id
        - items
        - flat_discount
        - tips
        - utensils
    QuoteResponse:
      type: object
      properties:
        quotation_id:
          type: string
        customer_id:
          type: integer
          format: int64
        store_id:
          type: integer
          format: int64
        breakdown:
          type: object
          additionalProperties: true
        created_at:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date-time
        is_used:
          type: boolean
paths:
  /api/v1/orders/health:
    post:
      summary: Check API health status
      operationId: checkHealth
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestRequest'
      responses:
        '200':
          description: Successful health check
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized - missing or invalid credentials
        '400':
          description: Bad request - invalid input
        '500':
          description: Internal server error
  /api/v1/orders/list:
    post:
      summary: List orders
      operationId: listOrders
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrdersRequest'
      responses:
        '200':
          description: A list of orders and their summary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '500':
          description: Server error
  /api/v1/orders/quote:
    post:
      summary: Create or update a quote
      operationId: upsertQuote
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuoteRequest'
      responses:
        '200':
          description: Quote created or updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '500':
          description: Server error